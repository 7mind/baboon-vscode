{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Baboon",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#bi-types"
		},
		{
			"include": "#declarations"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#block-comments"
		},
		{
			"include": "#directives"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"include": "#block-comments"
				},
				{
					"end": "(?!\\G)",
					"begin": "(^[ \\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.baboon"
						}
					},
					"patterns": [
						{
							"end": "\\n",
							"begin": "//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.baboon"
								}
							},
							"name": "comment.line.double-slash.baboon"
						}
					]
				}
			]
		},
		"block-comments": {
			"patterns": [
				{
					"match": "/\\*\\*/",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.baboon"
						}
					},
					"name": "comment.block.empty.baboon"
				},
				{
					"end": "\\*/",
					"begin": "^\\s*(/\\*\\*)(?!/)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.definition.comment.baboon"
						}
					},
					"patterns": [
						{
							"match": "(\\[\\[)([^\\]]+)(\\]\\])",
							"captures": {
								"1": {
									"name": "punctuation.definition.documentation.link.baboon"
								},
								"2": {
									"name": "string.other.link.title.markdown"
								},
								"3": {
									"name": "punctuation.definition.documentation.link.baboon"
								}
							}
						},
						{
							"include": "#block-comments"
						}
					],
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.baboon"
						}
					},
					"name": "comment.block.documentation.baboon"
				},
				{
					"end": "\\*/",
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.baboon"
						}
					},
					"patterns": [
						{
							"include": "#block-comments"
						}
					],
					"name": "comment.block.baboon"
				}
			]
		},
		"declarations": {
			"patterns": [
				{
					"begin": "\\b(root\\s+)?(data|struct|contract|adt)\\s+([A-Z_a-z][A-Z_a-z0-9]*)\\s*[{]",
					"end": "\\s*[}]",
					"beginCaptures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "keyword.declaration.baboon"
						},
						"3": {
							"name": "entity.name.class.declaration.baboon"
						}
					},
					"patterns": [
						{
							"include": "#instructions"
						}
					]
				},
				{
					"begin": "\\b(root\\s+)?(enum)\\s+([A-Z_a-z][A-Z_a-z0-9]*)\\s*[{]",
					"end": "\\s*[}]",
					"beginCaptures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "keyword.declaration.baboon"
						},
						"3": {
							"name": "entity.name.class.declaration.baboon"
						}
					},
					"patterns": [
						{
							"include": "#instructions-enum"
						}
					]
				},
				{
					"begin": "\\b(root\\s+)?(foreign)\\s+([A-Z_a-z][A-Z_a-z0-9]*)\\s*[{]",
					"end": "\\s*[}]",
					"beginCaptures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "keyword.declaration.baboon"
						},
						"3": {
							"name": "entity.name.class.declaration.baboon"
						}
					},
					"patterns": [
						{
							"include": "#strings"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#comments"
						},
						{
							"match": "([A-Z_a-z][A-Z_a-z0-9]*)\\s*[=]\\s*",
							"captures": {
								"1": {
									"name": "keyword.control.baboon"
								},
								"2": {
									"name": "constant.numeric.baboon"
								}
							}
						}
					]
				},
				{
					"match": "\\b(ns)\\s+([A-Z_a-z][A-Z_a-z0-9]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "entity.name.section.baboon"
						}
					}
				}
			]
		},
		"instructions": {
			"patterns": [
				{
					"match": "\\b([A-Z_a-z][A-Z_a-z0-9]*)\\s*[:]\\s*([A-Z_a-z][A-Z_a-z0-9\\s\\[\\]\\,\\.]*)\\b",
					"captures": {
						"1": {
							"name": "entity.name.tag.baboon"
						},
						"2": {
							"name": "support.type.baboon"
						}
					}
				},
				{
					"match": "\\b(is)\\s*([A-Z_a-z][A-Z_a-z0-9\\s\\[\\]\\,\\.]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "support.type.baboon"
						}
					}
				},
				{
					"match": "(\\+|-|\\^)\\s*([A-Z_a-z][A-Z_a-z0-9\\s\\[\\]\\,\\.\\:]*)\\b",
					"captures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "support.type.baboon"
						}
					}
				},
				{
					"include": "#declarations"
				},
				{
					"include": "#comments"
				}
			]
		},
		"instructions-enum": {
			"patterns": [
				{
					"match": "([A-Z_a-z][A-Z_a-z0-9]*)\\s*[=]\\s*([-]?[0-9]+)",
					"captures": {
						"1": {
							"name": "support.type.baboon"
						},
						"2": {
							"name": "constant.numeric.baboon"
						}
					}
				},
				{
					"match": "([A-Z_a-z][A-Z_a-z0-9]*)",
					"captures": {
						"1": {
							"name": "support.type.baboon"
						}
					}
				},
				{
					"include": "#comments"
				}
			]
		},
		"directives": {
			"patterns": [
				{
					"begin": "\\b(version|include)",
					"end": "\\b",
					"patterns": [
						{
							"include": "#strings"
						}
					],
					"beginCaptures": {
						"1": {
							"name": "keyword.declaration.baboon"
						}
					}
				},
				{
					"match": "\\b(model)\\s+([A-Z_a-z][A-Z_a-z0-9]*(?:[.][A-Z_a-z][A-Z_a-z0-9]*)*)\\b",
					"captures": {
						"1": {
							"name": "keyword.declaration.baboon"
						},
						"2": {
							"name": "storage.modifier.package.baboon"
						}
					}
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.declaration.baboon",
					"match": "\\b(with)\\b"
				}
			]
		},
		"bi-types": {
			"patterns": [
				{
					"name": "support.type.baboon",
					"match": "\\b(bit|i08|i16|i32|i64|u08|u16|u32|u64|f32|f64|f128|str|uid|tsu|tso|map|opt|lst|set)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.baboon",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.baboon",
					"match": "\\\\[\\]btnfr'\"\\\\]"
				},
				{
					"name": "constant.character.escape.baboon",
					"match": "\\\\u[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z]"
				},
				{
					"name": "constant.character.escape.baboon",
					"match": "\\\\[0-9][0-9]?[0-9]?"
				}
			]
		}
	},
	"scopeName": "source.baboon"
}
